@page "/clientes"
@using Proyecto1.Modelo;
@using Proyecto1.Controlador;
@rendermode InteractiveServer
<h3>Lista de Clientes</h3>
<br />
<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#agregarClienteModal">
    Agregar Nuevo Cliente
</button>
<br />
<br style="height:"/>

@foreach (var cliente in clientes)
{
    <ClienteCard Cliente="cliente" OnClienteEliminado="OnClienteEliminado" />

}

<!-- Modal -->
<div class="modal fade" id="agregarClienteModal" tabindex="-1" aria-labelledby="agregarClienteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="agregarClienteModalLabel">Agregar Nuevo Cliente</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulario para agregar nuevo cliente -->
                <EditForm Model="@nuevoCliente" OnValidSubmit="GuardarCliente" FormName="nuevoClienteForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre</label>
                        <InputText class="form-control" id="nombre" @bind-Value="nuevoCliente.Nombre" />
                        <ValidationMessage For="@(() => nuevoCliente.Nombre)" />
                    </div>
                    <div class="mb-3">
                        <label for="apellido" class="form-label">Apellido</label>
                        <InputText class="form-control" id="apellido" @bind-Value="nuevoCliente.Apellido" />
                        <ValidationMessage For="@(() => nuevoCliente.Apellido)" />
                    </div>
                    <div class="mb-3">
                        <label for="direccion" class="form-label">Dirección</label>
                        <InputText class="form-control" id="direccion" @bind-Value="nuevoCliente.Direccion" />
                        <ValidationMessage For="@(() => nuevoCliente.Direccion)" />
                    </div>
                    <div class="mb-3">
                        <label for="numero" class="form-label">Número</label>
                        <InputText class="form-control" id="numero" @bind-Value="nuevoCliente.Numero" />
                        <ValidationMessage For="@(() => nuevoCliente.Numero)" />
                    </div>
                    <div class="mb-3">
                        <label for="correo" class="form-label">Correo</label>
                        <InputText type="email" class="form-control" id="correo" @bind-Value="nuevoCliente.Correo" />
                        <ValidationMessage For="@(() => nuevoCliente.Correo)" />
                    </div>

                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>





@code {
    private List<Cliente> clientes { get; set; }
    private ControladorCliente controladorCliente;
    private ControladorModificarCliente controladorModificarCliente;
    private Cliente nuevoCliente;
    protected override void OnInitialized()
    {

        controladorCliente = new ControladorCliente();
        clientes = controladorCliente.obtenerClientes();
        controladorModificarCliente = new ControladorModificarCliente();
        nuevoCliente = new Cliente();
    }

    private bool isModalVisible;

    private void OpenModal()
    {
        isModalVisible = true;
    }

    private void CloseModal()
    {
        isModalVisible = false;
    }
  
    private void GuardarCliente()
    {
        controladorModificarCliente.AgregarCliente(nuevoCliente);
        clientes = controladorCliente.obtenerClientes(); // Actualiza la lista de clientes
        nuevoCliente = new Cliente();
        StateHasChanged();
        CloseModal(); // Cierra el modal después de guardar

    }
    private void OnClienteEliminado()
    {

        StateHasChanged();  // Forzar el renderizado del componente
    }
}
<style>
    #btn-agregar-cliente {
        position: fixed;
        top: 10px;
        right: 10px;
        z-index: 1000;
        padding: 10px 20px;
    }
</style>